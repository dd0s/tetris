deltatime, delta time, requestAnimationFrame, forEach

function update() {
    // ... do stuff ...
    requestAnimationFrame(update);
}
>>>> continuation-passing style or what

while(h--) { }
>>>> while (h != 0) { h-- }

function drawMatrix(matrix) {
    matrix.forEach((row, y) => {
        row.forEach((value, x) => {
        });
    });
}
>>>> traverse matrix

const [m, o] = [player.matrix, player];
>>>> destructing assignment https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment

if (pm[y][x] !== 0 && (arena[y + offset.y] && arena[y + offset.y][x + offset.x]) !== 0) {
    return true;
}
>>>> WTF, how does it work

function rotate(matrix, dir) {
    for (let y = 0; y < matrix.length; ++y) {
        for (let x = 0; x < matrix[y].length; ++x) {
            [matrix[x][y], matrix[y][x]] = [matrix[y][x], matrix[x][y]];
        }
    }
    if (dir > 0) {
        matrix.forEach(row => row.reverse());
    } else {
        matrix.reverse();
    }
}
>>>> this is good to know how this thing is implemented 